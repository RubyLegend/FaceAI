#!/usr/bin/env python3

import sys  # args
import os  # Environment variables
from PySide2 import QtWidgets
from PySide2.QtWidgets import QListWidgetItem
from designs.ui_MainWindow import Ui_MainWindow
from designs.ui_ErrorWindow import Ui_ErrorWindow
from core.CameraUtils import enumerateCameras, openCameraFeed, errorSignal

# Suppressing logging of OpenCV

os.environ['OPENCV_LOG_LEVEL'] = 'OFF'


# Creating all windows
app = QtWidgets.QApplication()
MainWindow = Ui_MainWindow()
ErrorWindow = Ui_ErrorWindow()

# Error window setup


def showError(message: str):
    ErrorWindow.ErrorMessage.setText(message)
    ErrorWindow.show()


# Load all windows
MainWindow.setupUi(MainWindow)
MainWindow.CameraList.itemDoubleClicked.connect(openCameraFeed)

ErrorWindow.setupUi(ErrorWindow)
errorSignal.errorSignal.connect(showError)

# Main function


if __name__ == "__main__":
    MainWindow.show()
    available_cameras = enumerateCameras()
    for port in available_cameras:
        QListWidgetItem(MainWindow.CameraList)
        item = MainWindow.CameraList.item(port)
        item.setText(f'{port}: {available_cameras[port]}')

    sys.exit(app.exec_())
